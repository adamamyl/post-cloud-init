#!/bin/bash
# Dynamic MOTD network table with colors
set -e

ESC=$'\033'
CYAN="${ESC}[36m"
BOLD_CYAN="${ESC}[1;36m"
GREEN="${ESC}[32m"
BOLD_GREEN="${ESC}[1;32m"
MAGENTA="${ESC}[35m"
RESET="${ESC}[0m"

WIDTH_IF=18
WIDTH_STATE=8
WIDTH_ADDR=59
SEP="+--------------------+----------+-------------------------------------------------------------+"

print_header() {
    echo "$SEP"
    printf "| %-*s | %-*s | %-*s |\n" "$WIDTH_IF" "Interface" "$WIDTH_STATE" "State" "$WIDTH_ADDR" "Addresses"
    echo "$SEP"
}

print_row() {
    local iface="$1" state="$2" addr="$3" color="$4"
    local iface_fmt state_fmt addr_fmt
    iface_fmt=$(printf "%-*s" "$WIDTH_IF" "$iface")
    state_fmt=$(printf "%-*s" "$WIDTH_STATE" "$state")
    addr_fmt=$(printf "%-*s" "$WIDTH_ADDR" "$addr")
    printf "| %s%s%s | %s%s%s | %s%s%s |\n" \
        "$color" "$iface_fmt" "$RESET" \
        "$color" "$state_fmt" "$RESET" \
        "$color" "$addr_fmt" "$RESET"
}

split_addr() {
    local addr="$1"
    local maxlen=$WIDTH_ADDR
    local parts=()
    while [ ${#addr} -gt $maxlen ]; do
        parts+=("${addr:0:maxlen}")
        addr="${addr:maxlen}"
    done
    parts+=("$addr")
    echo "${parts[@]}"
}

print_header

while IFS= read -r line; do
    iface=$(awk '{print $1}' <<<"$line")
    state=$(awk '{print $2}' <<<"$line")
    addrs=$(awk '{for (i=3; i<=NF; i++) if ($i ~ /^[0-9a-fA-F:.]+\/[0-9]+$/) print $i}' <<<"$line")

    if [[ "$state" == "UP" ]]; then
        color="$BOLD_GREEN"
    elif [[ "$state" == "DOWN" ]]; then
        color="$MAGENTA"
    else
        color="$CYAN"
    fi

    if [ -z "$addrs" ]; then
        print_row "$iface" "$state" "-" "$color"
        echo "$SEP"
        continue
    fi

    first=1
    while IFS= read -r addr; do
        for chunk in $(split_addr "$addr"); do
            if [ $first -eq 1 ]; then
                print_row "$iface" "$state" "$chunk" "$color"
                first=0
            else
                print_row "" "" "$chunk" "$color"
            fi
        done
    done <<<"$addrs"
    echo "$SEP"
done < <(ip -brief addr show | column -t)

# Compact network info table
PUB4=$(curl -s --max-time 2 -4 https://ifconfig.me || true)
PUB6=$(curl -s --max-time 2 -6 https://ifconfig.me || true)
GW=$(ip route show default 2>/dev/null | awk '/default/ {print $3; exit}')

if [ -n "$GW" ] || [ -n "$PUB4" ] || [ -n "$PUB6" ]; then
    SEP2="+----------------+----------------+----------------+"
    echo "$SEP2"
    printf "| %-14s | %-14s | %-14s |\n" "Default GW" "Public IPv4" "Public IPv6"
    echo "$SEP2"
    printf "| %-14s | %-14s | %-14s |\n" \
        "${GW:--}" "${PUB4:--}" "${PUB6:--}"
    echo "$SEP2"
fi
